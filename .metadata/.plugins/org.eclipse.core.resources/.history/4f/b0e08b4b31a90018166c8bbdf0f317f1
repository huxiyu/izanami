/*
 * mempool.c
 *
 *  Created on: 2018年8月26日
 *      Author: caojx
 */

#include "workercommon.h"
#include "mempool.h"

#include <stdlib.h>

static struct mempool *pool = NULL;

struct mempool *getmempool() {

	return pool;
}

struct leafinode *getfirst(struct skiplist *list) {

	struct leafinode *inode = NULL;

	struct steaminode *head = list->routenode;
//	while (head->down != NULL) {
//		head = head->down;
//	}
//
//	inode = (struct leafinode) head->post;

	return inode;
}

void insertinodeintoskiplist(struct skiplist *list, struct leafinode *inode) {

	struct leafinode *prenode = findfromskiplist(list, inode->element);
	inode->post = prenode->post;
	inode->pre = prenode;
	prenode->post->pre = inode;
	prenode->post = inode;
}

struct blockinfo *imalloc(struct mempool *pool) {

	struct leafinode *inode = getfirst(pool->freelist);
	deletefromskiplist(pool->freelist, inode->element);
	insertinodeintoskiplist(pool->usedlist, inode);
	return (struct blockinfo *)inode->element;
}

void returnblock(struct mempool *pool, struct blockinfo *info) {

	struct leafinode *inode = deletefromskiplist(pool->usedlist, info);
	insertinodeintoskiplist(pool->freelist, inode);
}
